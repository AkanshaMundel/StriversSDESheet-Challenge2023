#include <bits/stdc++.h> 

int merge(vector<int>&arr, int l , int mid , int h){
	int total = 0;
	int j = mid+1;
	for(int i = l; i<=mid ; i++){
		while(j<=h && arr[i]>2LL*arr[j]){
			j++;
		}
		total +=(j-(mid+1));
	}
	vector<int> t;
  int left = l, right = mid + 1;

  while (left <= mid && right <= h) {

    if (arr[left] <= arr[right]) {
      t.push_back(arr[left++]);
    } else {
      t.push_back(arr[right++]);
    }
  }

  while (left <= mid) {
    t.push_back(arr[left++]);
  }
  while (right <= h) {
    t.push_back(arr[right++]);
  }

  for (int i = l; i <= h; i++) {
    arr[i] = t[i - l];
  }
  return total;
}
int mergesort(vector<int>&arr, int l , int h){
  if(l>=h)return 0;
	int mid = l+(h-l)/2;
	int cnt = mergesort(arr,l,mid);
	cnt +=  mergesort(arr,mid+1,h);
	cnt+=merge(arr,l,mid,h);
	return cnt;
}
int reversePairs(vector<int> &arr, int n){
	// Write your code here.
	return mergesort(arr, 0 , n-1);	
    //   int count =0;
    // for(int i=0;i<arr.size();i++){
    //     for(int j=i+1;j<arr.size();j++){
    //         if(arr[i]>2*arr[j]) count++;
    //     }
    // }
    // return count;
}
