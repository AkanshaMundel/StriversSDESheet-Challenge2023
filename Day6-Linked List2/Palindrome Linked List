LinkedListNode<int>* reverse(LinkedListNode<int>* ptr) {
    LinkedListNode<int>* pre=NULL;
    LinkedListNode<int>* nex;
    LinkedListNode<int>*cur = ptr;
     if(ptr==NULL || ptr->next == NULL){

        return ptr;

    }
    while(cur!=NULL) {
        nex = cur->next;
        cur->next = pre;
        pre=cur;
        cur=nex;
    }
    return pre;
}
bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.
    //find the middle point thn reverse it acecking pali 
    LinkedListNode<int>* slow = head;
    LinkedListNode<int>* fast = head;
      if(head == NULL || head->next == NULL){

        return true;

 

    }
    while(fast->next!=NULL && fast->next->next!=NULL){
        slow = slow->next;
        fast = fast-> next-> next;
    }
    slow->next = reverse(slow->next);
    
    
    slow = slow->next;
    while (slow != NULL) {
      if (head->data != slow->data)
        return false;
      slow = slow->next;
      head = head->next;
    }
    return true;

}
